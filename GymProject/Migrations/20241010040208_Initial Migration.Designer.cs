// <auto-generated />
using GymProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymProject.Migrations
{
    [DbContext(typeof(GymDbContext))]
    [Migration("20241010040208_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoriasEjercicios", b =>
                {
                    b.Property<int>("CategoriasIdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("EjerciciosIdEjercicio")
                        .HasColumnType("int");

                    b.HasKey("CategoriasIdCategoria", "EjerciciosIdEjercicio");

                    b.HasIndex("EjerciciosIdEjercicio");

                    b.ToTable("CategoriasEjercicios");
                });

            modelBuilder.Entity("CategoriasRutinas", b =>
                {
                    b.Property<int>("CategoriasIdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("RutinasIdRutina")
                        .HasColumnType("int");

                    b.HasKey("CategoriasIdCategoria", "RutinasIdRutina");

                    b.HasIndex("RutinasIdRutina");

                    b.ToTable("CategoriasRutinas");
                });

            modelBuilder.Entity("GymProject.Models.Domain.Categorias", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("GymProject.Models.Domain.Ejercicios", b =>
                {
                    b.Property<int>("IdEjercicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEjercicio"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEjercicio");

                    b.ToTable("Ejercicios");
                });

            modelBuilder.Entity("GymProject.Models.Domain.Rutinas", b =>
                {
                    b.Property<int>("IdRutina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRutina"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRutina");

                    b.ToTable("Rutinas");
                });

            modelBuilder.Entity("CategoriasEjercicios", b =>
                {
                    b.HasOne("GymProject.Models.Domain.Categorias", null)
                        .WithMany()
                        .HasForeignKey("CategoriasIdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymProject.Models.Domain.Ejercicios", null)
                        .WithMany()
                        .HasForeignKey("EjerciciosIdEjercicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoriasRutinas", b =>
                {
                    b.HasOne("GymProject.Models.Domain.Categorias", null)
                        .WithMany()
                        .HasForeignKey("CategoriasIdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymProject.Models.Domain.Rutinas", null)
                        .WithMany()
                        .HasForeignKey("RutinasIdRutina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
